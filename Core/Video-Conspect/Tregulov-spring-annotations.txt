Аннотации Spring контейнер

@Component("beanID")
Аннотация на класс, ID можно не указывать, тогда будет использовано имя класса с маленькой буквы. Если в имени класса 2 первые буквы заглавные - будет использовано имя класса без изменений.

@Autowired
Аннотация для внедрения зависимостей. Может быть использована для Конструктора, Сеттера(или метода) или Поля

@Qualifier("beanID")
Используется совместно с @Autowired для разрешения конфликтов в случаях когда @Component объявлен для нескольких подходящих классов.
Указывается под аннотацией @Autowired для полей и методов, но в конструкторах указывается перед объявлением параметра.
@Autowired
public class Person(@Qualifier("dog") Pet pet)

@Value("valueDefinition")
Используется для установки значений напрямую или из properties файла. Файл свойств должен быть предварительно подключен выбранным способо описания контейнера (xml,аннотация,код)

@Scope("scopeName")
Используется совместно с аннотацией @Component для задания области видимости. По умолчанию используется singleton 

@PostConstruct и @PreDestroy
Используются на методах создаваемых бинов. Имя метода может быть любым. Параметров быть не должно. Используются в жизненном цикле бина согласно своим названиям. Для Scope("prototype") PpeDestroy не вызывается

@Configuration
Используется при описании контейнера кодом java
Контейнер при таком описании создается как
AnnotationCongigApplicationContext context = new AnnotationCongigApplicationContext(MyConfig.class); 
Где имя класса это класс с аннотацией Configuration

@ComponentScan("packageName")
Используется совместно с @Configuration для установки имени пакета в котором будут сканированы аннотации @Component

@PropertySource("filePath")
Используется совместно с Configuration для указания пути к файлу свойств.

@Bean
Используется методов внутри @Configuration. В таком случае не используются аннотации Component и Autowired , вся логика прописывается в коде методов класса конфигурации.
Именем бина при таком использовании конфигурации будет имя метода. Метод должен возвращать объект класса бина
@Bean
public Person myPerson(){return new Person(myCat())}